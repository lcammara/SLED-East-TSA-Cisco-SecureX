{
  "workflow": {
    "unique_name": "definition_workflow_01S26OGJ17BMU4bSaWxdgVB4MNvHmqUY3S2",
    "name": "Meraki - MX - Health Events to Incidents",
    "title": "Meraki - MX - Health Events to Incidents",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.secure_string",
        "properties": {
          "value": "*****",
          "scope": "local",
          "name": "Meraki API Key",
          "type": "datatype.secure_string",
          "description": "Your Meraki API key. This can be generated in your Meraki dashboard",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01S26OGJC2DZM08kzmijV6KSuoqhHLKTNF5",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "397947",
          "scope": "local",
          "name": "Meraki Organization ID",
          "type": "datatype.string",
          "description": "The ID of the Meraki organization you want to fetch security events for. You can find this ID in your Meraki dashboard",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01S26OGJC20DA3Ox1eUf3ijOFD3r1ImyPfE",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "L_630503947831878619",
          "scope": "local",
          "name": "Meraki Network ID",
          "type": "datatype.string",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_024A28PCIWUCS5Wig9xsrxu74Zaut3pUiqC",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "This workflow fetches health events for the last hour from Meraki for a specific organization. If there are any health events, an incident are created in Threat Response \n\nTarget Group: Default TargetGroup\n\nTargets: Cisco Meraki, CTR_For_Access_Token\n\nSteps:\n[] Fetch global variables\n[] Calculate the time 1 hour ago\n\n[] Fetch security events from Meraki\n[] Check if the events were retrieved successfully:\n[] If not, end the workflow\n[] If they were:\n[]\u003e Loop through each event checking if it's an event type we care about\n[]\u003e create the Threat Response objects\n\n",
      "display_name": "Meraki - MX - Health Events to Incidents",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "execute_on_target_group": true,
        "target_group": {
          "target_group_id": "target_group_01EJ0TQWPQWBD0qiWqClJKj9FOzwiZRfOFH",
          "run_on_all_targets": false,
          "selected_target_types": [
            "web-service.endpoint"
          ],
          "use_criteria": {
            "choose_target_using_algorithm": "choose_first_with_matching_criteria",
            "conditions": [
              {
                "operator": "eqi",
                "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                "right_operand": "Private_CTIA_Target"
              }
            ]
          }
        }
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01S26OH8QI3FC1Z7psyukh1Ux5yyNa6MYlR",
        "name": "Calculate Date",
        "title": "Get the time 1 hour ago",
        "type": "core.calculate_date",
        "base_type": "activity",
        "properties": {
          "adjustment": -3600,
          "continue_on_failure": false,
          "display_name": "Get the time 1 hour ago",
          "original_date": "$workflow.definition_workflow_01S26OGJ17BMU4bSaWxdgVB4MNvHmqUY3S2.output.start_time$",
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_024AE7PKIXB9M4dwAe11469P8TIuwPkQQNX",
        "name": "HTTP Request",
        "title": "Fetch Meraki Health Events",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "accept": "application/json",
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "allow_headers_redirect": false,
          "content_type": "application/json",
          "continue_on_error_status_code": true,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "X-Cisco-Meraki-API-Key",
              "value": "$workflow.definition_workflow_01S26OGJ17BMU4bSaWxdgVB4MNvHmqUY3S2.local.variable_workflow_01S26OGJC2DZM08kzmijV6KSuoqhHLKTNF5$"
            }
          ],
          "display_name": "Fetch Meraki Health Events",
          "method": "GET",
          "relative_url": "/v1/networks/$workflow.definition_workflow_01S26OGJ17BMU4bSaWxdgVB4MNvHmqUY3S2.local.variable_workflow_024A28PCIWUCS5Wig9xsrxu74Zaut3pUiqC$/health/alerts?t0=$activity.Get the time 1 hour ago.output.Result$",
          "runtime_user": {
            "override_target_runtime_user": false,
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target_group_criteria": true,
            "target_group": {
              "run_on_all_targets": false,
              "use_criteria": {
                "choose_target_using_algorithm": "choose_first_with_matching_criteria",
                "conditions": [
                  {
                    "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                    "operator": "eqi",
                    "right_operand": "Cisco Meraki"
                  }
                ]
              }
            }
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01S26OHCC042Q79FOx05WQCW0N9eDNnl7tS",
        "name": "Condition Block",
        "title": "Was the request successful?",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Was the request successful?",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01S26OHDFAV6D2hbvmIZS3CjGcbLotPmnz0",
            "name": "Condition Branch",
            "title": "Success",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_024AE7PKIXB9M4dwAe11469P8TIuwPkQQNX.output.response_body$",
                "operator": "ne",
                "right_operand": "[]"
              },
              "continue_on_failure": false,
              "display_name": "Success",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_024A9Z0MY94K578lYxoTtrkgEZn5acNo3Td",
                "name": "JSONPath Query",
                "title": "JSONPath Query",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "JSONPath Query",
                  "input_json": "$activity.definition_activity_024AE7PKIXB9M4dwAe11469P8TIuwPkQQNX.output.response_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "[0]['category']",
                      "jsonpath_query_name": "category",
                      "jsonpath_query_type": "string",
                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                    },
                    {
                      "jsonpath_query": "[0]['scope']['devices'][0]['name']",
                      "jsonpath_query_name": "name",
                      "jsonpath_query_type": "string",
                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                    },
                    {
                      "jsonpath_query": "[0]['type']",
                      "jsonpath_query_name": "type",
                      "jsonpath_query_type": "string",
                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                    },
                    {
                      "jsonpath_query": "[0]['severity']",
                      "jsonpath_query_name": "severity",
                      "jsonpath_query_type": "string",
                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                    },
                    {
                      "jsonpath_query": "[0]['scope']['devices'][0]['productType']",
                      "jsonpath_query_name": "productType",
                      "jsonpath_query_type": "string",
                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                    },
                    {
                      "jsonpath_query": "[0]['scope']['devices'][0]['serial']",
                      "jsonpath_query_name": "serial",
                      "jsonpath_query_type": "string",
                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                    },
                    {
                      "jsonpath_query": "[0]['scope']['devices'][0]['mac']",
                      "jsonpath_query_name": "mac",
                      "jsonpath_query_type": "string",
                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01S26OHBASNKU3cAnT9lheEnybBqJj62L7F",
                "name": "HTTP Request",
                "title": "Fetch Meraki Network Name",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "accept": "application/json",
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "allow_headers_redirect": false,
                  "content_type": "application/json",
                  "continue_on_error_status_code": true,
                  "continue_on_failure": false,
                  "custom_headers": [
                    {
                      "name": "X-Cisco-Meraki-API-Key",
                      "value": "$workflow.definition_workflow_01S26OGJ17BMU4bSaWxdgVB4MNvHmqUY3S2.local.variable_workflow_01S26OGJC2DZM08kzmijV6KSuoqhHLKTNF5$"
                    }
                  ],
                  "display_name": "Fetch Meraki Network Name",
                  "method": "GET",
                  "relative_url": "/v1/networks/$workflow.definition_workflow_01S26OGJ17BMU4bSaWxdgVB4MNvHmqUY3S2.local.variable_workflow_024A28PCIWUCS5Wig9xsrxu74Zaut3pUiqC$",
                  "runtime_user": {
                    "override_target_runtime_user": false,
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "override_workflow_target_group_criteria": true,
                    "target_group": {
                      "run_on_all_targets": false,
                      "use_criteria": {
                        "choose_target_using_algorithm": "choose_first_with_matching_criteria",
                        "conditions": [
                          {
                            "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                            "operator": "eqi",
                            "right_operand": "Cisco Meraki"
                          }
                        ]
                      }
                    }
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_024AEG9CPOAIL5BMNriI4Km4wtyRi3Tte5y",
                "name": "JSONPath Query",
                "title": "JSONPath Query",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "JSONPath Query",
                  "input_json": "$activity.definition_activity_01S26OHBASNKU3cAnT9lheEnybBqJj62L7F.output.response_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "['id']",
                      "jsonpath_query_name": "id",
                      "jsonpath_query_type": "string",
                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                    },
                    {
                      "jsonpath_query": "['name']",
                      "jsonpath_query_name": "name",
                      "jsonpath_query_type": "string",
                      "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01S277IRBPFD80gvwYIMus4jaLWTbJ9tgEP",
                "name": "Threat Response - Generate Access Token",
                "title": "Threat Response - Generate Access Token",
                "type": "workflow.atomic_workflow",
                "base_type": "subworkflow",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Threat Response - Generate Access Token",
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "override_workflow_target_group_criteria": true,
                    "target_group": {
                      "run_on_all_targets": false,
                      "use_criteria": {
                        "choose_target_using_algorithm": "choose_first_with_matching_criteria",
                        "conditions": [
                          {
                            "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                            "operator": "eqi",
                            "right_operand": "CTR_For_Access_Token"
                          }
                        ]
                      }
                    }
                  },
                  "workflow_id": "definition_workflow_01PP75S3LTBW4420OZU3rdHWKHFnE6aC7yH",
                  "workflow_name": "Threat Response - Generate Access Token"
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_024A8E1ZWSFNF0t7vElX1CJJ4StfRAthnCm",
                "name": "Threat Response - Create Meraki Health Incident",
                "title": "Threat Response - Create Meraki Health Incident",
                "type": "workflow.atomic_workflow",
                "base_type": "subworkflow",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Threat Response - Create Meraki Health Incident",
                  "input": {
                    "variable_workflow_01PP773PC153N1sUPzhFqV9bCbaxsz3yDwH": "$activity.definition_activity_01S277IRBPFD80gvwYIMus4jaLWTbJ9tgEP.output.variable_workflow_01PP75S3G7CJY6WAQr2IJC7qga2SIoE09gQ$",
                    "variable_workflow_01PP773PC19C57fpPyxEFzuX0kP8dAqdVoQ": "Meraki Health Alert: $activity.definition_activity_024A9Z0MY94K578lYxoTtrkgEZn5acNo3Td.output.jsonpath_queries.type$\nSererity: $activity.definition_activity_024A9Z0MY94K578lYxoTtrkgEZn5acNo3Td.output.jsonpath_queries.severity$\nCategory: $activity.definition_activity_024A9Z0MY94K578lYxoTtrkgEZn5acNo3Td.output.jsonpath_queries.category$\nDevice Name: $activity.definition_activity_024A9Z0MY94K578lYxoTtrkgEZn5acNo3Td.output.jsonpath_queries.name$\nDevice Type: $activity.definition_activity_024A9Z0MY94K578lYxoTtrkgEZn5acNo3Td.output.jsonpath_queries.productType$\nMAC: $activity.definition_activity_024A9Z0MY94K578lYxoTtrkgEZn5acNo3Td.output.jsonpath_queries.mac$\nSerial Number: $activity.definition_activity_024A9Z0MY94K578lYxoTtrkgEZn5acNo3Td.output.jsonpath_queries.serial$\nNetwork ID: $activity.definition_activity_024AEG9CPOAIL5BMNriI4Km4wtyRi3Tte5y.output.jsonpath_queries.id$\nNetwork Name: $activity.definition_activity_024AEG9CPOAIL5BMNriI4Km4wtyRi3Tte5y.output.jsonpath_queries.name$",
                    "variable_workflow_01PP773PC1ALV47FYVyDKQsPCuKzTZwYeyv": "New",
                    "variable_workflow_01PP773PC1DZZ2rpbgvgD3IRrMsngkGxWkK": "Meraki Health Alert: $activity.definition_activity_024A9Z0MY94K578lYxoTtrkgEZn5acNo3Td.output.jsonpath_queries.type$",
                    "variable_workflow_01PP773PC1F547IibuvGX89UFFJE9ZNlHgb": "amber",
                    "variable_workflow_01PP773PC1G7V6ZMj5IyCTQcEPiVhQm1fYO": "High"
                  },
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "override_workflow_target": true,
                    "target_id": "definition_target_01G3YNMLJIV9C5nhzguKtYGpj95Fdj2e5lW",
                    "target_type": "web-service.endpoint"
                  },
                  "workflow_id": "definition_workflow_01PP773PI1X3Y1YQWhirIL8Uy40Thd6ND7r",
                  "workflow_name": "Threat Response - Create Incident"
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01S26OHUMWGGM2cU3rTTOiPFjYACsA6rkQJ",
            "name": "Condition Branch",
            "title": "Anything else",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_024AE7PKIXB9M4dwAe11469P8TIuwPkQQNX.output.response_body$",
                "operator": "eq",
                "right_operand": ""
              },
              "continue_on_failure": false,
              "display_name": "Anything else",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01S26OHX5TIW236aWo593Wikju3U7IL2lJd",
                "name": "Completed",
                "title": "No Events",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "succeeded",
                  "continue_on_failure": false,
                  "display_name": "No Events",
                  "result_message": "Failed to fetch health events from Meraki\n\nStatus code: $activity.definition_activity_024AE7PKIXB9M4dwAe11469P8TIuwPkQQNX.output.status_code$\nResponse body: $activity.definition_activity_024AE7PKIXB9M4dwAe11469P8TIuwPkQQNX.output.response_body$",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "targets": {
    "definition_target_01G3YNMLJIV9C5nhzguKtYGpj95Fdj2e5lW": {
      "unique_name": "definition_target_01G3YNMLJIV9C5nhzguKtYGpj95Fdj2e5lW",
      "name": "Private_CTIA_Target",
      "title": "Private_CTIA_Target",
      "type": "web-service.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "description": "Private_CTIA_Target",
        "disable_certificate_validation": false,
        "display_name": "Private_CTIA_Target",
        "host": "private.intel.amp.cisco.com",
        "no_runtime_user": true,
        "protocol": "https"
      }
    }
  },
  "target_groups": {
    "target_group_01EJ0TQWPQWBD0qiWqClJKj9FOzwiZRfOFH": {
      "unique_name": "target_group_01EJ0TQWPQWBD0qiWqClJKj9FOzwiZRfOFH",
      "name": "Default TargetGroup",
      "title": "Default TargetGroup",
      "type": "generic.target_group",
      "base_type": "target_group",
      "version": "1.0.0",
      "targets": [
        {
          "data_target_type": "web-service.endpoint",
          "view_target_type": "web-service.endpoint",
          "include_all_targets": true
        },
        {
          "data_target_type": "email.smtp_endpoint",
          "view_target_type": "email.smtp_endpoint",
          "include_all_targets": true
        }
      ],
      "object_type": "target_group"
    }
  },
  "atomic_workflows": [
    "definition_workflow_01PP75S3LTBW4420OZU3rdHWKHFnE6aC7yH",
    "definition_workflow_01PP773PI1X3Y1YQWhirIL8Uy40Thd6ND7r"
  ],
  "dependent_workflows": [
    "definition_workflow_01PP75S3LTBW4420OZU3rdHWKHFnE6aC7yH",
    "definition_workflow_01PP773PI1X3Y1YQWhirIL8Uy40Thd6ND7r"
  ]
}